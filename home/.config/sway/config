### Variables
# Logo key. Use Mod1 for Alt.
set $mod Mod1
set $mods Mod1+Shift
set $amod Mod4
set $amods Mod4+Shift

# Home row direction keys, like vim
# set $left h
# set $down j
# set $up k
# set $right l

# Your preferred terminal emulator
set $term x-terminal-emulator
# Your preferred application launcher
# Note: it's recommended that you pass the final command to sway

set $menu j4-dmenu-desktop [--dmenu="dmenu -i"] [--term="i3-sensible-terminal"]
#set $menu dmenu_path | dmenu | xargs swaymsg exec --

### Output configuration
set $mode_display AUX SCREEN: (h) HOME (s) SOLO
set $mon_main output eDP-1 enable mode 3840x2160@60Hz pos
set $mon_lgwide output DP-2 enable mode 2560x1080@60Hz pos
mode "$mode_display" {
  bindsym h $mon_main 0 0 scale 2, $mon_lgwide 1920 0, output DP-1 disable, mode "default"
  bindsym s $mon_main 0 0, output DP-1 disable, output DP-2 disable, mode "default"

  # back to normal: Enter or Escape
  bindsym Return mode "default"
  bindsym Escape mode "default"

}
bindsym $mods+d mode "$mode_display"


### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' \
#               resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
exec swayidle -w \
         timeout 600 'swaylock -f -c 000000' \
         timeout 900 'swaymsg "output * dpms off"' \
              resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
#TODO

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mods+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mods+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mods+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    # bindsym $mod+$left focus left
    # bindsym $mod+$down focus down
    # bindsym $mod+$up focus up
    # bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    # bindsym $mod+Shift+$left move left
    # bindsym $mod+Shift+$down move down
    # bindsym $mod+Shift+$up move up
    # bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mods+Left move left
    bindsym $mods+Down move down
    bindsym $mods+Up move up
    bindsym $mods+Right move right
#
# Workspaces:
#
    # Special workspaces shortcuts
    set $wsm 
    set $wst 
    set $wsp p
    set $wsd 
    # Switch to workspace
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9
    bindsym $mod+0 workspace 10
    bindsym $mod+m workspace $wsm
    bindsym $mod+t workspace $wst
    bindsym $mod+F1 workspace $wsp
    bindsym $mod+F9 workspace $wsd
    # Move focused container to workspace
    bindsym $mods+1 move container to workspace 1
    bindsym $mods+2 move container to workspace 2
    bindsym $mods+3 move container to workspace 3
    bindsym $mods+4 move container to workspace 4
    bindsym $mods+5 move container to workspace 5
    bindsym $mods+6 move container to workspace 6
    bindsym $mods+7 move container to workspace 7
    bindsym $mods+8 move container to workspace 8
    bindsym $mods+9 move container to workspace 9
    bindsym $mods+0 move container to workspace 10
    bindsym $mods+m move container to workspace $wsm
    bindsym $mods+t move container to workspace $wst
    bindsym $mods+F1 move container to workspace $wsp
    bindsym $mods+F9 move container to workspace $wsd
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+h splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    # bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Sticky mode for floating windows. The sticked window stay visible on all 
    # workspaces.
    bindsym $mod+s sticky toggle

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mods+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym Mod5+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym Mod5+minus scratchpad show

    # Enter scratchpad mode
    bindsym $mods+s mode "$scratchpad"

#
# Named Scratchpads
#
mode "$scratchpad" {
  # audio
  bindsym a [class="Pavucontrol"] scratchpad show
  # calendar
  bindsym c [class="Gnome-calendar"] scratchpad show
  # keepass
  #bindsym k [instance="keepassxc"] scratchpad show

  # back to normal: Enter or Escape
  bindsym Return mode "default"
  bindsym Escape mode "default"
}

#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    # bindsym $left resize shrink width 10px
    # bindsym $down resize grow height 10px
    # bindsym $up resize shrink height 10px
    # bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# set primary gruvbox colorscheme colors
set $bg #282828
set $red #cc241d
set $green #98971a
set $yellow #d79921
set $blue #458588
set $purple #b16286
set $aqua #689d68
set $gray #a89984
set $darkgray #1d2021
set $white #ebdbb2

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top

    font pango:Inconsolata Nerd Font Mono, FontAwesome 10

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    #status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
    status_command i3status

  colors {
    # bar background color
    background $bg
    # text color used for blocks that do not have a color specified.
    statusline $yellow
    # workspaces section
    #                    border  backgr. text
    focused_workspace    $aqua $aqua $darkgray
    inactive_workspace   $darkgray $darkgray $yellow
    active_workspace     $darkgray $darkgray $yellow
    urgent_workspace     $red $red $bg
  }
}

#start of window title bars & borders section

# green gruvbox
# class                 border|backgr|text|indicator|child_border
#client.focused          $green $green $darkgray $purple $darkgray
#client.focused_inactive $darkgray $darkgray $yellow $purple $darkgray
#client.unfocused        $darkgray $darkgray $yellow $purple $darkgray
#client.urgent           $red $red $white $red $red

# blue gruvbox
# class                 border|backgr|text|indicator|child_border
client.focused          $blue $blue $darkgray $purple $darkgray
client.focused_inactive $darkgray $darkgray $yellow $purple $darkgray
client.unfocused        $darkgray $darkgray $yellow $purple $darkgray
client.urgent           $red $red $white $red $red

#end of window title bars & borders section

xwayland enable

exec "systemctl --user import-environment; systemctl --user start sway-session.target"

include /etc/sway/config.d/*
